# -*- coding: utf-8 -*-
"""Wine quality Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OL1-OdZJnGtkFmYwidklpr0w5ZTxaTeZ

Importing The Dependencies
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

"""Data Collection"""

#loading the dataset in pandas dataframe
wine_dataset = pd.read_csv('/content/winequality-red.csv')

#numbers of rows and columns
wine_dataset.shape

# first 5 rows
wine_dataset.head()

# checking for missing values
wine_dataset.isnull().sum()

"""Data Analysis and Visualization"""

# statistical measures of the datasets
wine_dataset.describe()

# number of values for each quality
sns.catplot(x='quality', data=wine_dataset, kind='count')

# volatile acidity vs quality
plot = plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='volatile acidity', data=wine_dataset)

# citric acid vs quality
plot = plt.figure(figsize=(5,5))
sns.barplot(x='quality', y='citric acid', data=wine_dataset)

"""Correlation

Positive correlation

Negative Correlation
"""

correlation = wine_dataset.corr()

# constructing a heat map to understand the correlation between columns
plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

"""Data Preprocessing"""

# Seperate the data and Label
X = wine_dataset.drop('quality', axis=1)
print(X)

"""Label Binarization"""

Y = wine_dataset['quality'].apply(lambda y_value: 1 if y_value>=7 else 0)
print(Y)

"""Train and Test SPLit"""

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=2)
print(Y.shape, Y_train.shape, Y_test.shape)

"""Model Training


Random Forest Classifier
"""

model = RandomForestClassifier()

model.fit(X_train, Y_train)

"""Model Evaluation

Accuracy Score
"""

#accuracy on test data
X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)
print('Accuracy:', test_data_accuracy)

"""Building A Predictive System"""

from os import pread
input_data = (7.3,0.65,0.0,1.2,0.065,15.0,21.0,0.9946,3.39,0.47,10.0)

# changing the input data into a array
input_data_as_numpy_array = np.asarray(input_data)

# reshape the data as we are predicting the label for only one instance
input_data_reshaped = input_data_as_numpy_array.reshape(1,-1)

prediction = model.predict(input_data_reshaped)
print(prediction)

if (prediction[0]==1):
  print('Good Quality Wine')
else:
  print('Bad Quality Wine')
